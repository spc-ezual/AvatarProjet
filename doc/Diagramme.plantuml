
@startuml Avatar
interface Avatar{
    ask(s: String): List[String]
    reinit(): Unit
}
interface CreationListMotClef{
    ListCorrection(Mots : List[String]): List[String]
    MatchMotClef(Mots : List[String], BDD1, BDD2): List[String]
}
interface AnalysePhrase{
    SepMots(s:String): List[String]
    CreationMotClef(Mots : List[String]): List[String]
}
interface CreationDeRep{
    Politesse(Mots : List[String], BDD3 ) :Boolean
    Reponse(Mots: List[String], BDD3 ): String
}
interface Correction{
    Correct(Mots : List[String], BDD1): List[String]
}
interface Interface{
    
}

Interface <-> Avatar
Avatar -> AnalysePhrase
AnalysePhrase -> CreationDeRep
CreationDeRep -> Avatar
Correction -|> CreationListMotClef




class BDD1 <<(B,Orange)>>
class BDD2 <<(B,Orange)>>
class BDD3 <<(B,Orange)>>
CreationListMotClef -> AnalysePhrase
BDD1 -|> AnalysePhrase
BDD2 -|> AnalysePhrase
BDD3 -|> AnalysePhrase

EntrÃ©Utilisateur -|> AnalysePhrase

@enduml